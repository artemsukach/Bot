const {answer} = require('./answer');
const TelegramBot = require('node-telegram-bot-api');
const {Wit, log} = require('node-wit');



// –≤–∫–ª—é—á–∞–µ–º –ë–æ—Ç–∞ TELEGRAM
const TG_TOKEN = '';
const bot = new TelegramBot(TG_TOKEN, {polling: true});

// –∑'—î–¥–Ω–∞–Ω–Ω—è –ø–æ —Ç–æ–∫–µ–Ω—É –∑ –±–æ—Ç–æ–º WIT
const WIT_TOKEN = ''  // —Ä–æ–±–æ—á–∏–π —Ç–æ–∫–µ–Ω
const client = new Wit({
    accessToken: WIT_TOKEN,
    logger: new log.Logger(log.DEBUG)
});

///////////////////////////////////////////////////////////////////////////////

// start
bot.onText(/\/start(.*)/, (msg, [source, match]) => {
    const chatId = msg.chat.id;

    bot.sendMessage(chatId, '–•–µ–ª–æ—É ‚ôÇ–±–æ–¥—ñ‚ôÇ \n–©–æ —Ö–æ—á–µ—à –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å?');
});

// example
bot.onText(/\/example(.*)/, (msg, [source, match]) => {
    const chatId = msg.chat.id;
    const example = './images/example.mp4';

    bot.sendMessage(chatId, '–û—Å—å –ø—Ä–∏–∫–ª–∞–¥–∏ –º–æ–∂–ª–∏–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤:');
    bot.sendVideo(chatId, example);
});

// help
bot.onText(/\/help(.*)/, (msg, [source, match]) => {
    const chatId = msg.chat.id;

    bot.sendMessage(chatId, '–ß–∏–º –∂–µ —è —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–∂—É, ‚ôÇ—Ö–ª–æ–ø—á–µ‚ôÇ?');
});

// warning
bot.onText(/\/warning(.*)/, (msg, [source, match]) => {
    const chatId = msg.chat.id;

    bot.sendMessage(chatId, '–ô–æ–π, –ø—Ä–æ–±–ª–µ–º–∫–∞ :(');
    setTimeout(() =>
        bot.sendMessage(chatId, '–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–∫—Ä—ñ–Ω—à–æ—Ç —á–∞—Ç—É —Ç–∞ –æ–ø–∏—Å –ø—Ä–æ–±–ª–µ–º–∏ –æ—Å—å —Å—é–¥–∏: \n‚ôÇ@Bitchach‚ôÇ or ‚ôÇ@capVig‚ôÇ'),
    1000);
});

// –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä
const validator = function(user_text) {
    if (! /[^–∞-—è–ê-–Ø–Å—ë-—ñ0-9_,.!?"' -]/g.test(user_text) && user_text.length <= 100) {
        return true;
    } else {
        return false;
    }
}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—ñ—ó –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –±—É–¥—å-—è–∫–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    // –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if (validator(msg.text)) {

    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –±–æ—Ç WIT
    client.message(msg.text, {})
    .then((data) => {
        const response = JSON.parse(JSON.stringify(data));
        const ans = answer(response);  // —Ç—É—Ç –∞–Ω–∞–ª—ñ–∑ –∑–∞–ø–∏—Ç—É

        bot.sendMessage(chatId, ans);  // –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑–∞–ª—Ç—É
    })
    .catch(console.error);

  } else {
      if (! /^\//g.test(msg.text)) {  // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Å–ª–µ—à
        let stiker_id = 'CAACAgIAAxkBAAECVtxgrTE0RQnpZLMpn3LMzr6p-jtapgACXAEAAhAabSKcIs6F61GChR8E';
        let tekst = "–Ø —â–µ –Ω–∞–≤—á–∞—é—Å—å, —Ç–æ–º—É —ñ–Ω–∫–æ–ª–∏ –ø–æ–≥–∞–Ω–æ —Ä–æ–∑—É–º—ñ—é –≤–∞—Å.\n–°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ –ø–æ-—ñ–Ω—à–æ–º—É.\n\n(–¢–≤–æ—Ä—Ü—ñ –∫–∞–∑–∞–ª–∏, —â–æ –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –ø–∞—Ç—á—ñ –≤–∏–ø—Ä–∞–≤–ª—è—Ç—å —Ü–µüòâ)";

        bot.sendSticker(chatId, stiker_id);
        setTimeout(() =>
            bot.sendMessage(chatId, tekst),
        1000);
      }
  }
});


module.exports = validator;
